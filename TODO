If you have any suggests I am happy to add them to the list.

for 0.3 release
    - core
        - verify required packages in wmii.lua (like lua version number)
        - version number in the files
        - resize windows/columns with Mod1-[+-] or Mod1-Ctrl-[hjkl]

        - some way to get the configuration out at runtime

        - debugging
            - look at http://www.keplerproject.org/lualogging/
            - make 'debug' take a filename to log to
              ('1' and 'true' will go to stderr)
            - log levels

        - debugging C libraries
            - make it possible to debug the C code by enabling verbosity
              from lua code.

    - bundled plugins
        - mpd: controls / volume
        - history: 
            - Mod1-[oi] to provide window history
            - Mod4-[oi] to provide workspace history (vim inspired)
        - at: use the at scheduler to implement a reminder system
              action of 'at' or '@' for short
              examples:
                 alt-a @ 20:00 "message to display"
                 alt-a @ 20:00 !xeyes

future
    - core
        - bundle xclipboard functionality (add a core/x11.so)
        - make wmii.load_plugin() support multiple api versions

        - Mod1-; will display a "execute lua code here" command line
          - it would be nice if it tab completed

        - tags starting with '@' are reserved for internal use and don't
          display on /lbar
        - Mod1-[ and Mod1-] to push/pop windows off a stack in a hidden
          tag @stack

        - figure out a better way for wmiirc to remap function in
          wmii.lua;
          - an option would be to give each function a name (be it an
            event, key-binding, or action) and make them usable from
            either so people could bind a function ring_my_bell() to an
            event, key, or action.  Maybe...
                wmii.bind_event ("ring", wmii.h_ring_my_bell)
                wmii.bind_key ("Alt-r", wmii.h_ring_my_bell)
                wmii.bind_action ("ring", wmii.h_ring_my_bell)
            it should really make no difference how the action was
            invoked.  We could let the handler function know *how* with
            a parameter that wmii.lua passes to it.

        - improve logging
          - use file in ~/.wmii-3.5/ like wmii+ruby

    - bundled plugins
        - 'session_manager'
            - remember where windows are, and restart the "session" as
              it was before
            - global and per-view

        - 'clipboard'
            - remember X of the last copy/paste contents
            - pull them up with an action
            - see http://glipper.sourceforge.net/ for ideas/code

        - 'messages'
            - add action or hot-key to copy last message to xclipboard

        - 'groups'
            - grouping multiple windows (maybe a tag prefix, and use the
              existing tag idea)
              - group individually,
              - group all in a view,
              - group all visible
            - sending input to all windows in that group
            - would be useful for a cluster, etc.

        - whereami: wireless / controls

vim: set ts=8 et sw=8 tw=72
